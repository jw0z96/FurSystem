\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{furtility}
\citation{xgen}
\citation{yeti}
\citation{Pinaev2017}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{sec:introduction}{{1}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Related work}{1}{subsection.1.1}}
\newlabel{sec:related}{{1.1}{1}{Related work}{subsection.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Existing solutions}{1}{subsection.1.2}}
\newlabel{sec:existing}{{1.2}{1}{Existing solutions}{subsection.1.2}{}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}GPU acceleration}{1}{subsection.1.3}}
\newlabel{sec:existingGPU}{{1.3}{1}{GPU acceleration}{subsection.1.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Implementation}{1}{section.2}}
\newlabel{sec:implementation}{{2}{1}{Implementation}{section.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Resources}{1}{subsection.2.1}}
\newlabel{sec:resources}{{2.1}{1}{Resources}{subsection.2.1}{}}
\citation{dartThrowing}
\citation{parallelPoisson}
\citation{objLoading}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Design}{2}{subsection.2.2}}
\newlabel{sec:design}{{2.2}{2}{Design}{subsection.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Development}{2}{subsection.2.3}}
\newlabel{sec:development}{{2.3}{2}{Development}{subsection.2.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}Mesh loading}{2}{subsubsection.2.3.1}}
\newlabel{sec:objLoading}{{2.3.1}{2}{Mesh loading}{subsubsection.2.3.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}Curve distributors}{2}{subsubsection.2.3.2}}
\newlabel{sec:distributors}{{2.3.2}{2}{Curve distributors}{subsubsection.2.3.2}{}}
\@LN@col{2}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  Example distribution generated by my naive random distributor, note how the distribution stays relatively uniform despite variance in mesh density.\relax }}{2}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{figure:distribution}{{1}{2}{Example distribution generated by my naive random distributor, note how the distribution stays relatively uniform despite variance in mesh density.\relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.3}Compute shaders}{2}{subsubsection.2.3.3}}
\newlabel{sec:compute shaders}{{2.3.3}{2}{Compute shaders}{subsubsection.2.3.3}{}}
\citation{objLoading}
\citation{learnPBR}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.4}Curve operators}{3}{subsubsection.2.3.4}}
\newlabel{sec:operators}{{2.3.4}{3}{Curve operators}{subsubsection.2.3.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.5}Rendering}{3}{subsubsection.2.3.5}}
\newlabel{sec:rendering}{{2.3.5}{3}{Rendering}{subsubsection.2.3.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}User testing}{3}{subsection.2.4}}
\newlabel{sec:usertesting}{{2.4}{3}{User testing}{subsection.2.4}{}}
\@LN@col{2}
\@writefile{toc}{\contentsline {section}{\numberline {3}Results}{3}{section.3}}
\newlabel{sec:results}{{3}{3}{Results}{section.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Examples of visual output that my system is capable of producing.\relax }}{3}{figure.caption.3}}
\newlabel{figure:screenshots}{{2}{3}{Examples of visual output that my system is capable of producing.\relax }{figure.caption.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Performance}{3}{subsection.3.1}}
\newlabel{sec:performance}{{3.1}{3}{Performance}{subsection.3.1}{}}
\citation{alembic}
\citation{skippy}
\citation{Marschner}
\@LN@col{1}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  The accompanying node graph setup used to create the images in Figure\nobreakspace  {}\ref  {figure:screenshots}.\relax }}{4}{figure.caption.4}}
\newlabel{figure:screenshot_gui}{{3}{4}{The accompanying node graph setup used to create the images in Figure~\ref {figure:screenshots}.\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces  Performance metrics showing time taken to distribute varying numbers of primitives, on meshes of varying triangle counts. An Intel Core i7-6700 CPU and an NVIDIA GTX1080 GPU were used for testing.\relax }}{4}{figure.caption.5}}
\newlabel{figure:distributionPerformance}{{4}{4}{Performance metrics showing time taken to distribute varying numbers of primitives, on meshes of varying triangle counts. An Intel Core i7-6700 CPU and an NVIDIA GTX1080 GPU were used for testing.\relax }{figure.caption.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces  Performance metrics showing the time taken to perform a full graph evaluation on a complex setup, as seen in Figure\nobreakspace  {}\ref  {figure:screenshot_gui}, for meshes of varying triangle counts. Note that over 500,000 primitives are being processed in this setup.\relax }}{4}{figure.caption.6}}
\newlabel{figure:fullPerformance}{{5}{4}{Performance metrics showing the time taken to perform a full graph evaluation on a complex setup, as seen in Figure~\ref {figure:screenshot_gui}, for meshes of varying triangle counts. Note that over 500,000 primitives are being processed in this setup.\relax }{figure.caption.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Conclusion}{4}{section.4}}
\newlabel{sec:conclusion}{{4}{4}{Conclusion}{section.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Future Work}{4}{subsection.4.1}}
\newlabel{sec:futurework}{{4.1}{4}{Future Work}{subsection.4.1}{}}
\@LN@col{2}
\bibstyle{acmsiggraph}
\bibdata{references}
\bibcite{parallelPoisson}{\citename {Bowers et\nobreakspace  {}al\unhbox \voidb@x \hbox {.} }2010}
\bibcite{dartThrowing}{\citename {Cline et\nobreakspace  {}al\unhbox \voidb@x \hbox {.} }2009}
\bibcite{furtility}{\citename {Fagnou and Leaning }2010}
\bibcite{skippy}{\citename {Krs et\nobreakspace  {}al\unhbox \voidb@x \hbox {.} }2017}
\bibcite{Marschner}{\citename {Marschner et\nobreakspace  {}al\unhbox \voidb@x \hbox {.} }2003}
\bibcite{yeti}{\citename {{Peregrine*labs} }2012}
\bibcite{Pinaev2017}{\citename {Pinaev }2017}
\bibcite{alembic}{\citename {{Sony Pictures Imageworks and Industrial Light and Magic} }2011}
\bibcite{xgen}{\citename {Thompson et\nobreakspace  {}al\unhbox \voidb@x \hbox {.} }2003}
\bibcite{learnPBR}{\citename {Vries }2016}
\bibcite{objLoading}{\citename {{Wikibooks Community} }2011}
\@LN@col{1}
\@LN@col{2}
\newlabel{lst:buffers}{{1}{5}{Extract from the Distributor compute shader, showing how the Mesh and Curves buffers are accessed}{lstlisting.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Extract from the Distributor compute shader, showing how the Mesh and Curves buffers are accessed.}{5}{lstlisting.1}}
\newlabel{lst:rendercpp}{{2}{5}{Extract from the C++ application code showing how Curves are rendered procedurally. \texttt {emptyVAO} is an empty Vertex Array Object, \texttt {curvesSSBO} is a \texttt {GL\_SHADER\_STORAGE\_BUFFER} containing vertex data for multiple curves, and \texttt {indices} is the number of curves in the buffer}{lstlisting.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Extract from the C++ application code showing how Curves are rendered procedurally. \texttt  {emptyVAO} is an empty Vertex Array Object, \texttt  {curvesSSBO} is a \texttt  {GL\_SHADER\_STORAGE\_BUFFER} containing vertex data for multiple curves, and \texttt  {indices} is the number of curves in the buffer.}{5}{lstlisting.2}}
\newlabel{lst:renderglsl}{{3}{5}{Extract from the curves rendering geometry shader, showing how vertex positions were processed from data stored in a bound \texttt {GL\_SHADER\_STORAGE\_BUFFER}}{lstlisting.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Extract from the curves rendering geometry shader, showing how vertex positions were processed from data stored in a bound \texttt  {GL\_SHADER\_STORAGE\_BUFFER}.}{5}{lstlisting.3}}
