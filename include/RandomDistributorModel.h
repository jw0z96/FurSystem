#ifndef RANDOMDISTRIBUTORMODEL_H
#define RANDOMDISTRIBUTORMODEL_H

#include "AbstractDistributorModel.h"

#include "widgets/RandomDistributorModelWidget.h"

class RandomDistributorModel : public AbstractDistributorModel
{
	Q_OBJECT

	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief constructor
		//----------------------------------------------------------------------------------------------------------------------
		RandomDistributorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief destructor
		//----------------------------------------------------------------------------------------------------------------------
		~RandomDistributorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief overrides for NodeDataModel
		//----------------------------------------------------------------------------------------------------------------------
		QString caption() const override {return QString("Disribute random curves on Mesh");};
		//----------------------------------------------------------------------------------------------------------------------
		QString name() const override {return QString("Random Distributor");};
		//----------------------------------------------------------------------------------------------------------------------
		std::unique_ptr<NodeDataModel> clone() const override {return std::make_unique<RandomDistributorModel>();};
		//----------------------------------------------------------------------------------------------------------------------
		virtual QString modelName() const {return QString("Distributed Curves");};
		//----------------------------------------------------------------------------------------------------------------------
		QWidget* embeddedWidget() override {return m_embedded;};
		//----------------------------------------------------------------------------------------------------------------------
		std::shared_ptr<NodeData> outData(PortIndex port) override;
		//----------------------------------------------------------------------------------------------------------------------

	protected:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief recalculate the mesh area
		//----------------------------------------------------------------------------------------------------------------------
		void meshChanged() override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief calculate the total mesh area
		//----------------------------------------------------------------------------------------------------------------------
		float calculateMeshArea() const;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief distribute curves on the mesh
		//----------------------------------------------------------------------------------------------------------------------
		void distribute() override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief m_embedded, m_ui our qt ui widget and contents from the ui file
		//----------------------------------------------------------------------------------------------------------------------
		QWidget* m_embedded;
		Ui::RandomDistributorModelWidget* m_ui;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief the total mesh area
		//----------------------------------------------------------------------------------------------------------------------
		float m_totalMeshArea;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Mesh SSBO ID
		//----------------------------------------------------------------------------------------------------------------------
		unsigned int m_meshSSBOID;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Curves SSBO ID
		//----------------------------------------------------------------------------------------------------------------------
		unsigned int m_curvesSSBOID;

};

#endif // RANDOMDISTRIBUTORMODEL_H
