#ifndef RANDOMDISTRIBUTORMODEL_H
#define RANDOMDISTRIBUTORMODEL_H

#include "AbstractDistributorModel.h"

#include <QtWidgets/QSpinBox>

class RandomDistributorModel : public AbstractDistributorModel
{
	Q_OBJECT

	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief constructor
		//----------------------------------------------------------------------------------------------------------------------
		RandomDistributorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief destructor
		//----------------------------------------------------------------------------------------------------------------------
		~RandomDistributorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief overrides for NodeDataModel
		//----------------------------------------------------------------------------------------------------------------------
		QString caption() const override {return QString("Disribute random curves on Mesh");};
		//----------------------------------------------------------------------------------------------------------------------
		QString name() const override {return QString("Random Distributor");};
		//----------------------------------------------------------------------------------------------------------------------
		std::unique_ptr<NodeDataModel> clone() const override {return std::make_unique<RandomDistributorModel>();};
		//----------------------------------------------------------------------------------------------------------------------
		virtual QString modelName() const {return QString("Distributed Curves");};
		//----------------------------------------------------------------------------------------------------------------------
		QWidget* embeddedWidget() override {return m_spinbox;};
		//----------------------------------------------------------------------------------------------------------------------

	private:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief distribute curves on the mesh
		//----------------------------------------------------------------------------------------------------------------------
		void distribute();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief spinbox to control intensity (temporary)
		//----------------------------------------------------------------------------------------------------------------------
		QSpinBox* m_spinbox;

};

#endif // RANDOMDISTRIBUTORMODEL_H
