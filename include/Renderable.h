#ifndef RENDERABLE_H
#define RENDERABLE_H

#include <iostream>

enum RenderableType
{
	DEFAULT,
	CURVES_LINES,
	CURVES_RIBBONS,
	MESH
};

class Renderable
{
	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief constructor
		//----------------------------------------------------------------------------------------------------------------------
		Renderable(){}//std::cout<<"Renderable()\n";}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief destructor
		//----------------------------------------------------------------------------------------------------------------------
		~Renderable(){}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief draw this renderable
		//----------------------------------------------------------------------------------------------------------------------
		virtual void draw(){}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief get the type of this renderable
		//----------------------------------------------------------------------------------------------------------------------
		virtual RenderableType getType() const {return DEFAULT;}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief draw this renderable
		//----------------------------------------------------------------------------------------------------------------------
		virtual void generate(){}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief delete the opengl buffers for the renderable
		//----------------------------------------------------------------------------------------------------------------------
		virtual void cleanUp(){}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief return whether the VAO is constructed
		//----------------------------------------------------------------------------------------------------------------------
		bool getConstructed() const {return isConstructed;}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief return whether the VAO is to be deleted
		//----------------------------------------------------------------------------------------------------------------------
		bool getToBeDeleted() const {return toBeDeleted;}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief set whether the VAO is to be deleted
		//----------------------------------------------------------------------------------------------------------------------
		void setToBeDeleted() {toBeDeleted = true;}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief set whether the renderable is to be drawn
		//----------------------------------------------------------------------------------------------------------------------
		void setVisibility(bool _visibility) {visibility = _visibility;}
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief get whether the renderable is to be drawn
		//----------------------------------------------------------------------------------------------------------------------
		bool getVisibility() const {return visibility;}

	protected:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief whether the VAO is constructed
		//----------------------------------------------------------------------------------------------------------------------
		bool isConstructed = false;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief whether the VAO is to be deleted
		//----------------------------------------------------------------------------------------------------------------------
		bool toBeDeleted = false;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief whether the renderable is to be drawn
		//----------------------------------------------------------------------------------------------------------------------
		bool visibility = false;
};

#endif // RENDERABLE_H
