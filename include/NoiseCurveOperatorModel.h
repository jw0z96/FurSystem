#ifndef NOISECURVEOPERATORMODEL_H
#define NOISECURVEOPERATORMODEL_H

#include "AbstractCurveOperatorModel.h"

#include <QtWidgets/QDoubleSpinBox>

class NoiseCurveOperatorModel : public AbstractCurveOperatorModel
{
	Q_OBJECT

	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief constructor
		//----------------------------------------------------------------------------------------------------------------------
		NoiseCurveOperatorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief destructor
		//----------------------------------------------------------------------------------------------------------------------
		~NoiseCurveOperatorModel();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief overrides for NodeDataModel
		//----------------------------------------------------------------------------------------------------------------------
		QString caption() const override {return QString("Noise Curves");};
		//----------------------------------------------------------------------------------------------------------------------
		QString name() const override {return QString("Noise Curves");};
		//----------------------------------------------------------------------------------------------------------------------
		std::unique_ptr<NodeDataModel> clone() const override {return std::make_unique<NoiseCurveOperatorModel>();};
		//----------------------------------------------------------------------------------------------------------------------
		virtual QString modelName() const {return QString("Noise Operated Curves");};
		//----------------------------------------------------------------------------------------------------------------------
		QWidget* embeddedWidget() override {return m_spinbox;};
		//----------------------------------------------------------------------------------------------------------------------

	private:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief manipulate curves
		//----------------------------------------------------------------------------------------------------------------------
		void operateCurves() override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief spinbox to control intensity (temporary)
		//----------------------------------------------------------------------------------------------------------------------
		QDoubleSpinBox* m_spinbox;

};

#endif // NOISECURVEOPERATORMODEL_H
